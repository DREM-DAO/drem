<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DREM-API</name>
    </assembly>
    <members>
        <member name="T:DREM_API.BusinessController.BufferTransferBusinessController">
            <summary>
            
            </summary>
        </member>
        <member name="M:DREM_API.BusinessController.BufferTransferBusinessController.#ctor(DREM_API.Repository.BufferTransferRepository)">
            <summary>
            Constructor business BufferTransfer controller
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:DREM_API.BusinessController.DailyPayoutBusinessController">
            <summary>
            
            </summary>
        </member>
        <member name="M:DREM_API.BusinessController.DailyPayoutBusinessController.#ctor(DREM_API.Repository.DailyPayoutRepository)">
            <summary>
            Constructor business DailyPayout controller
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:DREM_API.BusinessController.ImageMetaBusinessController">
            <summary>
            
            </summary>
        </member>
        <member name="M:DREM_API.BusinessController.ImageMetaBusinessController.#ctor(DREM_API.Repository.ImageMetaRepository)">
            <summary>
            Constructor business ImageMeta controller
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:DREM_API.BusinessController.OrderBusinessController">
            <summary>
            OrderBusinessController
            </summary>
        </member>
        <member name="M:DREM_API.BusinessController.OrderBusinessController.#ctor(DREM_API.Repository.OrderRepository)">
            <summary>
            Constructor business Order controller
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:DREM_API.BusinessController.ProjectBusinessController">
            <summary>
            
            </summary>
        </member>
        <member name="M:DREM_API.BusinessController.ProjectBusinessController.#ctor(DREM_API.Repository.ProjectRepository,DREM_API.Repository.ValueSetRepository,DREM_API.BusinessController.OrderBusinessController,DREM_API.BusinessController.DailyPayoutBusinessController,DREM_API.BusinessController.ImageMetaBusinessController,DREM_API.BusinessController.TransferBusinessController,DREM_API.BusinessController.BufferTransferBusinessController,DREM_API.BusinessController.ShareholderBusinessController,DREM_API.BusinessController.VotingBusinessController)">
            <summary>
            Constructor business project controller
            </summary>
            <param name="repository"></param>
            <param name="valueSetRepository"></param>
            <param name="orderBusinessController"></param>
            <param name="dailyPayoutBusinessController"></param>
            <param name="imageMetaBusinessController"></param>
            <param name="transferBusinessController"></param>
            <param name="bufferTransferBusinessController"></param>
            <param name="shareholderBusinessController"></param>
            <param name="votingBusinessController"></param>
        </member>
        <member name="T:DREM_API.BusinessController.RECBusinessController">
            <summary>
            REC Business Controller
            </summary>
        </member>
        <member name="M:DREM_API.BusinessController.RECBusinessController.#ctor(DREM_API.Repository.RECRepository,DREM_API.Repository.OpportunityRepository)">
            <summary>
            RECBusinessController constructor
            </summary>
            <param name="repository"></param>
            <param name="opportunityRepository"></param>
        </member>
        <member name="T:DREM_API.BusinessController.ShareholderBusinessController">
            <summary>
            ShareholderBusinessController
            </summary>
        </member>
        <member name="M:DREM_API.BusinessController.ShareholderBusinessController.#ctor(DREM_API.Repository.ShareholderRepository)">
            <summary>
            Constructor business Shareholder controller
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:DREM_API.BusinessController.TransferBusinessController">
            <summary>
            
            </summary>
        </member>
        <member name="M:DREM_API.BusinessController.TransferBusinessController.#ctor(DREM_API.Repository.TransferRepository)">
            <summary>
            Constructor business Transfer controller
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:DREM_API.BusinessController.ValueSetBusinessController">
            <summary>
            ValueSet Business Controller
            </summary>
        </member>
        <member name="M:DREM_API.BusinessController.ValueSetBusinessController.#ctor(DREM_API.Repository.ValueSetRepository)">
            <summary>
            ValueSet Business Controller constructor
            </summary>
            <param name="repository"></param>
        </member>
        <member name="T:DREM_API.BusinessController.VotingBusinessController">
            <summary>
            
            </summary>
        </member>
        <member name="M:DREM_API.BusinessController.VotingBusinessController.#ctor(DREM_API.Repository.VotingQuestionRepository,DREM_API.Repository.VotingResultRepository)">
            <summary>
            Constructor business Voting controller
            </summary>
            <param name="votingQuestionRepository"></param>
            <param name="votingResultRepository"></param>
        </member>
        <member name="T:DREM_API.Controllers.BufferTransferController">
            <summary>
            This controller manages api methods for buffer transfers
            </summary>
        </member>
        <member name="M:DREM_API.Controllers.BufferTransferController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DREM_API.BusinessController.BufferTransferBusinessController)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="bufferTransferBusinessController"></param>
        </member>
        <member name="M:DREM_API.Controllers.BufferTransferController.Create(DREM_API.Model.Comm.BufferTransferBase)">
            <summary>
            Create BufferTransfer
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.BufferTransferController.Update(System.String,DREM_API.Model.Comm.BufferTransferBase)">
            <summary>
            Create BufferTransfer
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.BufferTransferController.Delete(System.String)">
            <summary>
            Delete BufferTransfer
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.BufferTransferController.ListAllForProject(System.String)">
            <summary>
            List all projects for administration purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Controllers.DailyPayoutController">
            <summary>
            This controller manages api methods for daily pauouts 
            </summary>
        </member>
        <member name="M:DREM_API.Controllers.DailyPayoutController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DREM_API.BusinessController.DailyPayoutBusinessController)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="DailyPayoutBusinessController"></param>
        </member>
        <member name="M:DREM_API.Controllers.DailyPayoutController.Create(DREM_API.Model.Comm.DailyPayoutBase)">
            <summary>
            Create DailyPayout
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.DailyPayoutController.Update(System.String,DREM_API.Model.Comm.DailyPayoutBase)">
            <summary>
            Create DailyPayout
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.DailyPayoutController.Delete(System.String)">
            <summary>
            Delete DailyPayout
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.DailyPayoutController.ListAllForProject(System.String)">
            <summary>
            List all projects for administration purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Controllers.ImageMetaController">
            <summary>
            This controller manages api methods for image processor
            </summary>
        </member>
        <member name="M:DREM_API.Controllers.ImageMetaController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DREM_API.BusinessController.ImageMetaBusinessController)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="ImageMetaBusinessController"></param>
        </member>
        <member name="M:DREM_API.Controllers.ImageMetaController.Create(DREM_API.Model.Comm.ImageMetaBase)">
            <summary>
            Create ImageMeta
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ImageMetaController.Update(System.String,DREM_API.Model.Comm.ImageMetaWithId)">
            <summary>
            Create ImageMeta
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ImageMetaController.Delete(System.String)">
            <summary>
            Delete ImageMeta
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ImageMetaController.ListAllForProject(System.String)">
            <summary>
            List all projects for administration purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Controllers.OrderController">
            <summary>
            This controller manages api methods for image processor
            </summary>
        </member>
        <member name="M:DREM_API.Controllers.OrderController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DREM_API.BusinessController.OrderBusinessController)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="OrderBusinessController"></param>
        </member>
        <member name="M:DREM_API.Controllers.OrderController.Create(DREM_API.Model.Comm.OrderBase)">
            <summary>
            Create Order
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.OrderController.Update(System.String,DREM_API.Model.Comm.OrderBase)">
            <summary>
            Create Order
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.OrderController.Delete(System.String)">
            <summary>
            Delete Order
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.OrderController.ListAllBidsForProject(System.UInt64)">
            <summary>
            List all asa bids
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.OrderController.ListAllOffersForProject(System.UInt64)">
            <summary>
            List all asa bids
            </summary>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Controllers.ProjectController">
            <summary>
            This controller manages api methods for projects 
            </summary>
        </member>
        <member name="M:DREM_API.Controllers.ProjectController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DREM_API.BusinessController.ProjectBusinessController)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="projectBusinessController"></param>
        </member>
        <member name="M:DREM_API.Controllers.ProjectController.Create(DREM_API.Model.Comm.ProjectBase)">
            <summary>
            Create project
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ProjectController.Update(DREM_API.Model.Comm.ProjectWithId)">
            <summary>
            Update project
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ProjectController.Delete(System.String)">
            <summary>
            Delete project
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ProjectController.ListAll">
            <summary>
            List all projects for administration purposes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ProjectController.List">
            <summary>
            List all publicly visible projects
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ProjectController.GetDetail(System.String)">
            <summary>
            List all publicly visible projects
            </summary>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Controllers.RECController">
            <summary>
            This controller manages api methods for recs
            </summary>
        </member>
        <member name="M:DREM_API.Controllers.RECController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DREM_API.BusinessController.RECBusinessController)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="recBusinessController"></param>
        </member>
        <member name="M:DREM_API.Controllers.RECController.Register(DREM_API.Model.DB.REC)">
            <summary>
            Register real estate company
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.RECController.CreateOpportunity(DREM_API.Model.Comm.OpportunityBase)">
            <summary>
            Register real estate company
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.RECController.ListAllOpportunities">
            <summary>
            List All Opportunities registered from rec
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.RECController.GetAll">
            <summary>
            Lists all registered RECs
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.RECController.GetAll2">
            <summary>
            Lists all registered RECs
            </summary>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Controllers.ShareholderController">
            <summary>
            This controller manages api methods for buffer transfers
            </summary>
        </member>
        <member name="M:DREM_API.Controllers.ShareholderController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DREM_API.BusinessController.ShareholderBusinessController)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="ShareholderBusinessController"></param>
        </member>
        <member name="M:DREM_API.Controllers.ShareholderController.Create(DREM_API.Model.Comm.ShareholderBase)">
            <summary>
            Create Shareholder
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ShareholderController.Update(System.String,DREM_API.Model.Comm.ShareholderBase)">
            <summary>
            Create Shareholder
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ShareholderController.Delete(System.String)">
            <summary>
            Delete Shareholder
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ShareholderController.ListAllForAsset(System.UInt64)">
            <summary>
            List all projects for administration purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Controllers.TransferController">
            <summary>
            This controller manages api methods for buffer transfers
            </summary>
        </member>
        <member name="M:DREM_API.Controllers.TransferController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DREM_API.BusinessController.TransferBusinessController)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="TransferBusinessController"></param>
        </member>
        <member name="M:DREM_API.Controllers.TransferController.Create(DREM_API.Model.Comm.TransferBase)">
            <summary>
            Create Transfer
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.TransferController.Update(System.String,DREM_API.Model.Comm.TransferBase)">
            <summary>
            Create Transfer
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.TransferController.Delete(System.String)">
            <summary>
            Delete Transfer
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.TransferController.ListAllForAsset(System.UInt64)">
            <summary>
            List all projects for administration purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Controllers.UserController">
            <summary>
            This controller manages user data
            </summary>
        </member>
        <member name="M:DREM_API.Controllers.UserController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:DREM_API.Controllers.UserController.Me">
            <summary>
            Returns authenticated user account
            </summary>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Controllers.ValueSetController">
            <summary>
            This controller manages value sets
            </summary>
        </member>
        <member name="M:DREM_API.Controllers.ValueSetController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DREM_API.BusinessController.ValueSetBusinessController)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="valueSetBusinessController"></param>
        </member>
        <member name="M:DREM_API.Controllers.ValueSetController.Set(DREM_API.Model.Comm.ValueSetBase)">
            <summary>
            Register real estate company
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ValueSetController.DeleteSet(System.String)">
            <summary>
            Removes value set
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ValueSetController.DeleteItem(System.String,System.String)">
            <summary>
            Removes value set item
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ValueSetController.GetByValueSetCode(System.String)">
            <summary>
            Get specific value set in dictionary form key->Text
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.ValueSetController.List">
            <summary>
            Get specific value set in dictionary form key->Text
            </summary>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Controllers.VersionController">
            <summary>
            This controller returns version of the current api
            </summary>
        </member>
        <member name="M:DREM_API.Controllers.VersionController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:DREM_API.Controllers.VersionController.Get">
            <summary>
            Returns version of the current api
            
            For development purposes it returns version of assembly, for production purposes it returns string build by pipeline which contains project information, pipeline build version, assembly version, and build date
            </summary>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Controllers.VotingController">
            <summary>
            This controller manages api methods for buffer Votings
            </summary>
        </member>
        <member name="M:DREM_API.Controllers.VotingController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,DREM_API.BusinessController.VotingBusinessController)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="VotingBusinessController"></param>
        </member>
        <member name="M:DREM_API.Controllers.VotingController.CreateVotingQuestion(DREM_API.Model.Comm.Voting.VotingQuestionBase)">
            <summary>
            Create Voting Question
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.VotingController.CreateVotingQuestion(DREM_API.Model.Comm.Voting.VotingResultBase)">
            <summary>
            Create Voting Result
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.VotingController.UpdateVotingQuestion(System.String,DREM_API.Model.Comm.Voting.VotingQuestionWithId)">
            <summary>
            Update VotingQuestion
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.VotingController.UpdateVotingResult(System.String,DREM_API.Model.Comm.Voting.VotingResultWithId)">
            <summary>
            Update VotingQuestion
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.VotingController.DeleteVotingQuestion(System.String)">
            <summary>
            Delete Voting Question
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.VotingController.DeleteVotingResult(System.String)">
            <summary>
            Delete Voting Result
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Controllers.VotingController.ListAllForAsset(System.String)">
            <summary>
            List all projects for administration purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Extensions.User">
            <summary>
            User extensions
            </summary>
        </member>
        <member name="M:DREM_API.Extensions.User.IsAdmin(System.Security.Claims.ClaimsPrincipal,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Returns true if user is in admin list
            </summary>
            <param name="user"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Model.ADBContext">
            <summary>
            Database context
            </summary>
        </member>
        <member name="M:DREM_API.Model.ADBContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{DREM_API.Model.ADBContext},Microsoft.Extensions.Logging.ILogger{DREM_API.Model.ADBContext},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="options"></param>
            <param name="logger"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:DREM_API.Model.ADBContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            Configure
            </summary>
            <param name="optionsBuilder"></param>
        </member>
        <member name="M:DREM_API.Model.ADBContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            DB Schema
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="P:DREM_API.Model.ADBContext.RECs">
            <summary>
            List of real estate companies
            </summary>
        </member>
        <member name="P:DREM_API.Model.ADBContext.Projects">
            <summary>
            List of projects to shown on the main screen
            </summary>
        </member>
        <member name="P:DREM_API.Model.ADBContext.ValueSets">
            <summary>
            List of value sets
            </summary>
        </member>
        <member name="P:DREM_API.Model.ADBContext.Opportunities">
            <summary>
            List of value sets
            </summary>
        </member>
        <member name="P:DREM_API.Model.ADBContext.DailyPayouts">
            <summary>
            List of daily project payouts
            </summary>
        </member>
        <member name="P:DREM_API.Model.ADBContext.ImageMetas">
            <summary>
            List of images for project
            </summary>
        </member>
        <member name="P:DREM_API.Model.ADBContext.Transfers">
            <summary>
            List of all transactions on the blockchain with the asset
            </summary>
        </member>
        <member name="P:DREM_API.Model.ADBContext.Orders">
            <summary>
            List of known orders for each nft
            </summary>
        </member>
        <member name="P:DREM_API.Model.ADBContext.BufferTransfers">
            <summary>
            List of known orders for each nft
            </summary>
        </member>
        <member name="P:DREM_API.Model.ADBContext.Shareholders">
            <summary>
            List of all accounts who own specific asa
            </summary>
        </member>
        <member name="P:DREM_API.Model.ADBContext.VotingQuestions">
            <summary>
            List of all votings for specific asa
            </summary>
        </member>
        <member name="P:DREM_API.Model.ADBContext.VotingResults">
            <summary>
            List of all voting results for asked questions
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.BufferTransferBase">
            <summary>
            Buffer transfer transaction s
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.BufferTransferBase.ProjectId">
            <summary>
            Project.Id
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.BufferTransferBase.Note">
            <summary>
            Transfer reason
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.BufferTransferBase.Amount">
            <summary>
            Tx amount
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.BufferTransferBase.Currency">
            <summary>
            Tx currency
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.BufferTransferBase.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.BufferTransferWithId">
            <summary>
            Buffer transfer - money sent to the buffer or sent out from the buffer
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.BufferTransferWithId.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.DailyPayoutBase">
            <summary>
            List of daily payouts
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.DailyPayoutBase.ProjectId">
            <summary>
            Project.Id
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.DailyPayoutBase.TxId">
            <summary>
            Published in the blockchain under tx ids
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.DailyPayoutBase.AggregatedAmount">
            <summary>
            Amout 
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.DailyPayoutBase.Asset">
            <summary>
            Asset id, eg usdc mainnet algo asset
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.DailyPayoutBase.ReceiverParty">
            <summary>
            Investors / REC / DREM / Liquidity providers
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.DailyPayoutWithId">
            <summary>
            Payout with id
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.DailyPayoutWithId.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.ImageMetaBase">
            <summary>
            Picture metadata for specific project
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ImageMetaBase.ProjectId">
            <summary>
            Project.Id
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ImageMetaBase.Name">
            <summary>
            Name of the picture
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ImageMetaBase.Description">
            <summary>
            Description of the picture
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ImageMetaBase.DateOfPicture">
            <summary>
            Time when picture has been taken 
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ImageMetaBase.Src">
            <summary>
            Full picture resolution
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ImageMetaBase.Thumbnail">
            <summary>
            Small picture 
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.ImageMetaWithId">
            <summary>
            Image meta
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ImageMetaWithId.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.OpportunityBase">
            <summary>
            Opportunty from REC to DREM
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.OpportunityWithId">
            <summary>
            Opportunity to be updated
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OpportunityWithId.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.OrderBase">
            <summary>
            Hittable Bid or Offer in the escrow account
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.Price">
            <summary>
            Calculated price between the first asa and second asa with respect for assets decimals
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.AssetReceiveAmount">
            <summary>
            Amount of asset to be recieved
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.AssetPayAmount">
            <summary>
            Amount of asset to be paid
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.AssetToReceiveId">
            <summary>
            Asset id to be received. If algo, than null
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.AssetToPayId">
            <summary>
            Asset id to be paid. If algo, than null
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.AssetReceiveDecimals">
            <summary>
            Receive asset decimals
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.AssetPayDecimals">
            <summary>
            Pay asset decimals
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.EscrowAddress">
            <summary>
            Address of the escrow account
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.OwnerAddress">
            <summary>
            Address of the market maker account
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.Round">
            <summary>
            Round when the order has been placed
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.Time">
            <summary>
            Time when order has been placed
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.AppId">
            <summary>
            App id
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderBase.Version">
            <summary>
            Version of the approval application
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.OrderWithId">
            <summary>
            Order with id
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.OrderWithId.Id">
            <summary>
            Unique id
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.ProjectBase">
            <summary>
            Project to show on the main screen
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.UrlId">
            <summary>
            url friendly name
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.ASA">
            <summary>
            Underlying algorand standard asset
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.Top">
            <summary>
            is top offer
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.Lat">
            <summary>
            Lattitude
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.Lng">
            <summary>
            Longtitude
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.Name">
            <summary>
            Project name
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.IRR">
            <summary>
            Interest rate return
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.Evaluation">
            <summary>
            Current evaluation
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.PropertyType">
            <summary>
            property type value set
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.InvestmentType">
            <summary>
            investment type value set
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.Region">
            <summary>
            region value set
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.Country">
            <summary>
            country value set code
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.City">
            <summary>
            city value set code
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.Countdown">
            <summary>
            When project hit this time, it should get canceled
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.ShowToPublic">
            <summary>
            The project is publicly visible
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectBase.IssuerAccount">
            <summary>
            The account of the issuer is allowed to ask questions and set its results
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.ProjectDetail">
            <summary>
            Project details
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectDetail.Project">
            <summary>
            Project info
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectDetail.DailyPayouts">
            <summary>
            List of daily payments to owners of asa
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectDetail.Images">
            <summary>
            List of images of the estate
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectDetail.BufferTxs">
            <summary>
            List of images of the estate
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectDetail.Shareholders">
            <summary>
            List of all shareholders
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectDetail.Transfers">
            <summary>
            List of all asset transfers. If the trading in place through known escrow smart contracts, than it shows also underlying price
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectDetail.Bids">
            <summary>
            List of all current bids on the escrow accounts
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectDetail.Offers">
            <summary>
            List of all current offers on the escrow accounts
            </summary> 
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectDetail.Votings">
            <summary>
            Votings - List of questions with public auditable results
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.ProjectWithId">
            <summary>
            Project with id
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectWithId.Id">
            <summary>
            Unique id
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.ProjectWithValueSets">
            <summary>
            Project with filled in value set names in specific language
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectWithValueSets.CurrencyName">
            <summary>
            Currency
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectWithValueSets.PropertyTypeName">
            <summary>
            Property type
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectWithValueSets.InvestmentTypeName">
            <summary>
            investment type
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectWithValueSets.RegionName">
            <summary>
            region name
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectWithValueSets.CountryName">
            <summary>
            country name
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ProjectWithValueSets.CityName">
            <summary>
            city name
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.ShareholderBase">
            <summary>
            Shareholder
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ShareholderBase.Account">
            <summary>
            Account address
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ShareholderBase.Share">
            <summary>
            Share
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ShareholderBase.ProjectAsset">
            <summary>
            Project asa id
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.ShareholderWithId">
            <summary>
            Shareholder information
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ShareholderWithId.Id">
            <summary>
            Unique id
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.TransferBase">
            <summary>
            List of all asa transfers, except of transfers to know escrow accounts meant for trading
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.TransferBase.FromAccount">
            <summary>
            From account
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.TransferBase.ToAccount">
            <summary>
            To account
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.TransferBase.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.TransferBase.Price">
            <summary>
            Price if can be detected from the escrow smart contract
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.TransferBase.PriceAsset">
            <summary>
            If price uknown always null
            If price known and underlying trading asset is algo, asset is null and price filled in, if stable coin then ASA id
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.TransferBase.ProjectAsset">
            <summary>
            Project asa id
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.TransferWithId">
            <summary>
            List of all asa transfers, except of transfers to know escrow accounts meant for trading
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.TransferWithId.Id">
            <summary>
            Unique id
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.UserInfo">
            <summary>
            Show user information
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.UserInfo.Address">
            <summary>
            Crypto address
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.UserInfo.IsAdmin">
            <summary>
            Is admin
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.UserInfo.KYCVerified">
            <summary>
            is KYC verified
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.ValueSetBase">
            <summary>
            value set
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ValueSetBase.ValueSetCode">
            <summary>
            value set code
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ValueSetBase.ItemCode">
            <summary>
            item code
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.ValueSetBase.ItemValue">
            <summary>
            item value
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.Voting.VotingBase">
            <summary>
            Public voting
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingBase.Question">
            <summary>
            Question
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingBase.Result">
            <summary>
            Result
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.Voting.VotingQuestionBase">
            <summary>
            Vote Coin AMS0001 https://scholtz.github.io/AMS/AMS-0001/AMS-0001.html specs
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingQuestionBase.TxId">
            <summary>
            Tx Id with the question
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingQuestionBase.QuestionerAccount">
            <summary>
            The questioner
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingQuestionBase.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingQuestionBase.Question">
            <summary>
            Question
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingQuestionBase.Duration">
            <summary>
            Duration
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingQuestionBase.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingQuestionBase.Options">
            <summary>
            Options
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.Voting.VotingQuestionWithId">
            <summary>
            question in voting
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingQuestionWithId.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.Voting.VotingResultBase">
            <summary>
            Result
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingResultBase.TxId">
            <summary>
            Tx Id with the results
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingResultBase.QuestionTxId">
            <summary>
            Identifier of the question asked
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingResultBase.Options">
            <summary>
            Results calculated with rule 1 share = 1 vote
            </summary>
        </member>
        <member name="T:DREM_API.Model.Comm.Voting.VotingResultWithId">
            <summary>
            voting result 
            </summary>
        </member>
        <member name="P:DREM_API.Model.Comm.Voting.VotingResultWithId.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:DREM_API.Model.RECBase">
            <summary>
            Real estate company base model
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.OrgName">
            <summary>
            Org name
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.OrgTaxID">
            <summary>
            Tax id
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.OrgPhoneNumber">
            <summary>
            phone
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.AddressLine1">
            <summary>
            address
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.AddressLine2">
            <summary>
            Address line 2
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.City">
            <summary>
            city 
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.State">
            <summary>
            State
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.Country">
            <summary>
            country
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.PostalCode">
            <summary>
            postal code
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.ContactFirstName">
            <summary>
            contact first name
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.ContactLastName">
            <summary>
            contact last name
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.ContactMiddleName">
            <summary>
            middle name
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.ContactPhoneNumber">
            <summary>
            phone
            </summary>
        </member>
        <member name="P:DREM_API.Model.RECBase.ContactEmail">
            <summary>
            email
            </summary>
        </member>
        <member name="T:DREM_API.Model.DB.BufferTransfer">
            <summary>
            Transfer to or from the project money buffer
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.BufferTransfer.Created">
            <summary>
            time created
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.BufferTransfer.Updated">
            <summary>
            time of last update
            </summary>
        </member>
        <member name="T:DREM_API.Model.DB.DailyPayout">
            <summary>
            Pyout item
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.DailyPayout.Created">
            <summary>
            time created
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.DailyPayout.Updated">
            <summary>
            time of last update
            </summary>
        </member>
        <member name="T:DREM_API.Model.DB.ImageMeta">
            <summary>
            Image meta information db model
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.ImageMeta.Created">
            <summary>
            time created
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.ImageMeta.Updated">
            <summary>
            time of last update
            </summary>
        </member>
        <member name="T:DREM_API.Model.DB.Opportunity">
            <summary>
            DB model for opportunity
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.Opportunity.Created">
            <summary>
            time created
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.Opportunity.Updated">
            <summary>
            time of last update
            </summary>
        </member>
        <member name="T:DREM_API.Model.DB.Order">
            <summary>
            Odred db model
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.Order.Created">
            <summary>
            time created
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.Order.Updated">
            <summary>
            time of last update
            </summary>
        </member>
        <member name="T:DREM_API.Model.DB.Project">
            <summary>
            db model for project
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.Project.Created">
            <summary>
            time created
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.Project.Updated">
            <summary>
            time of last update
            </summary>
        </member>
        <member name="T:DREM_API.Model.DB.REC">
            <summary>
            Real estate company db model
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.REC.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.REC.Created">
            <summary>
            time created
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.REC.Updated">
            <summary>
            time updated
            </summary>
        </member>
        <member name="T:DREM_API.Model.DB.Shareholder">
            <summary>
            Shareholder db model
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.Shareholder.Created">
            <summary>
            time created
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.Shareholder.Updated">
            <summary>
            time updated
            </summary>
        </member>
        <member name="T:DREM_API.Model.DB.Transfer">
            <summary>
            Transfer from or to the project money buffer
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.Transfer.Created">
            <summary>
            time created
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.Transfer.Updated">
            <summary>
            time of last update
            </summary>
        </member>
        <member name="T:DREM_API.Model.DB.VotingQuestion">
            <summary>
            Voting question base
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.VotingQuestion.Created">
            <summary>
            time created
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.VotingQuestion.Updated">
            <summary>
            time of last update
            </summary>
        </member>
        <member name="T:DREM_API.Model.DB.VotingResult">
            <summary>
            Result of the voting
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.VotingResult.Created">
            <summary>
            time created
            </summary>
        </member>
        <member name="P:DREM_API.Model.DB.VotingResult.Updated">
            <summary>
            time of last update
            </summary>
        </member>
        <member name="T:DREM_API.Model.ValueSet">
            <summary>
            value set db model
            </summary>
        </member>
        <member name="P:DREM_API.Model.ValueSet.Id">
            <summary>
            id 
            </summary>
        </member>
        <member name="P:DREM_API.Model.ValueSet.ValueSetCode">
            <summary>
            value set code
            </summary>
        </member>
        <member name="P:DREM_API.Model.ValueSet.ItemCode">
            <summary>
            value set item code
            </summary>
        </member>
        <member name="P:DREM_API.Model.ValueSet.ItemValue">
            <summary>
            localization text in specific language
            </summary>
        </member>
        <member name="P:DREM_API.Model.ValueSet.Language">
            <summary>
            language
            </summary>
        </member>
        <member name="T:DREM_API.Model.Version">
            <summary>
            Version model
            </summary>
        </member>
        <member name="P:DREM_API.Model.Version.InstanceIdentifier">
            <summary>
            Instance identifier. Every application runtime has its own guid. If 3 pods are launched in kubernetes, it is possible to identify instance by this identifier
            </summary>
        </member>
        <member name="P:DREM_API.Model.Version.InstanceStartedAt">
            <summary>
            Last time when instance has been reset
            </summary>
        </member>
        <member name="P:DREM_API.Model.Version.ApplicationName">
            <summary>
            Application name
            </summary>
        </member>
        <member name="P:DREM_API.Model.Version.DockerImageVersion">
            <summary>
            Docker image version
            </summary>
        </member>
        <member name="P:DREM_API.Model.Version.BuildNumber">
            <summary>
            Build number from devops or github actions
            </summary>
        </member>
        <member name="P:DREM_API.Model.Version.DLLVersion">
            <summary>
            Application dll version
            </summary>
        </member>
        <member name="P:DREM_API.Model.Version.BuildTime">
            <summary>
            Dll build time
            </summary>
        </member>
        <member name="P:DREM_API.Model.Version.Culture">
            <summary>
            Culture info
            </summary>
        </member>
        <member name="P:DREM_API.Model.Version.EmailConfigured">
            <summary>
            Shows info weather email service is configured
            </summary>
        </member>
        <member name="P:DREM_API.Model.Version.RedisConfigured">
            <summary>
            Shows info weather persistant redis service is configured
            </summary>
        </member>
        <member name="P:DREM_API.Model.Version.SMSConfigured">
            <summary>
            Shows info weather SMS service is configured
            </summary>
        </member>
        <member name="P:DREM_API.Model.Version.StorageTest">
            <summary>
            Storage test
            </summary>
        </member>
        <member name="M:DREM_API.Model.Version.GetVersion(System.String,System.DateTimeOffset,System.String,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Get version
            </summary>
            <param name="instanceId"></param>
            <param name="start"></param>
            <param name="dllVersion"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Program">
            <summary>
            Main app class
            </summary>
        </member>
        <member name="M:DREM_API.Program.Main(System.String[])">
            <summary>
            Main entry point
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:DREM_API.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates web
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Repository.BufferTransferRepository">
            <summary>
            Real estate companies EF repository
            </summary>
        </member>
        <member name="M:DREM_API.Repository.BufferTransferRepository.#ctor(DREM_API.Model.ADBContext)">
            <summary>
            rec repository constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DREM_API.Repository.BufferTransferRepository.GetAllAsync">
            <summary>
            Return all real estate companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.BufferTransferRepository.AddAsync(DREM_API.Model.Comm.BufferTransferBase)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.BufferTransferRepository.ListAllForProject(System.String)">
            <summary>
            List payouts for specific project
            </summary>
            <param name="projectId"></param>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.BufferTransferRepository.UpdateAsync(DREM_API.Model.Comm.BufferTransferWithId)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.BufferTransferRepository.DeleteAsync(System.String[])">
            <summary>
            Delete items from DB.
            </summary>
            <param name="ids">Entity, that will be deleted.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="T:DREM_API.Repository.DailyPayoutRepository">
            <summary>
            Real estate companies EF repository
            </summary>
        </member>
        <member name="M:DREM_API.Repository.DailyPayoutRepository.#ctor(DREM_API.Model.ADBContext)">
            <summary>
            rec repository constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DREM_API.Repository.DailyPayoutRepository.GetAllAsync">
            <summary>
            Return all real estate companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.DailyPayoutRepository.AddAsync(DREM_API.Model.Comm.DailyPayoutBase)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.DailyPayoutRepository.ListAllForProject(System.String)">
            <summary>
            List payouts for specific project
            </summary>
            <param name="projectId"></param>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.DailyPayoutRepository.UpdateAsync(DREM_API.Model.Comm.DailyPayoutWithId)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.DailyPayoutRepository.DeleteAsync(System.String[])">
            <summary>
            Delete items from DB.
            </summary>
            <param name="ids">Entity, that will be deleted.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="T:DREM_API.Repository.ImageMetaRepository">
            <summary>
            Real estate companies EF repository
            </summary>
        </member>
        <member name="M:DREM_API.Repository.ImageMetaRepository.#ctor(DREM_API.Model.ADBContext)">
            <summary>
            rec repository constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DREM_API.Repository.ImageMetaRepository.GetAllAsync">
            <summary>
            Return all real estate companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.ImageMetaRepository.ListAllForProject(System.String)">
            <summary>
            List image meta for specific project
            </summary>
            <param name="projectId"></param>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.ImageMetaRepository.AddAsync(DREM_API.Model.Comm.ImageMetaBase)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.ImageMetaRepository.UpdateAsync(DREM_API.Model.Comm.ImageMetaWithId)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.ImageMetaRepository.DeleteAsync(System.String[])">
            <summary>
            Delete items from DB.
            </summary>
            <param name="ids">Entity, that will be deleted.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="T:DREM_API.Repository.OpportunityRepository">
            <summary>
            Real estate companies EF repository
            </summary>
        </member>
        <member name="M:DREM_API.Repository.OpportunityRepository.#ctor(DREM_API.Model.ADBContext)">
            <summary>
            rec repository constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DREM_API.Repository.OpportunityRepository.GetAllAsync">
            <summary>
            Return all real estate companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.OpportunityRepository.AddAsync(DREM_API.Model.Comm.OpportunityBase)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.OpportunityRepository.UpdateAsync(DREM_API.Model.Comm.OpportunityWithId)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.OpportunityRepository.DeleteAsync(System.String[])">
            <summary>
            Delete items from DB.
            </summary>
            <param name="ids">Entity, that will be deleted.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="T:DREM_API.Repository.OrderRepository">
            <summary>
            Real estate companies EF repository
            </summary>
        </member>
        <member name="M:DREM_API.Repository.OrderRepository.#ctor(DREM_API.Model.ADBContext)">
            <summary>
            rec repository constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DREM_API.Repository.OrderRepository.GetAllAsync">
            <summary>
            Return all real estate companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.OrderRepository.AddAsync(DREM_API.Model.Comm.OrderBase)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.OrderRepository.UpdateAsync(DREM_API.Model.Comm.OrderWithId)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.OrderRepository.DeleteAsync(System.String[])">
            <summary>
            Delete items from DB.
            </summary>
            <param name="ids">Entity, that will be deleted.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="T:DREM_API.Repository.ProjectRepository">
            <summary>
            project EF repository 
            </summary>
        </member>
        <member name="M:DREM_API.Repository.ProjectRepository.#ctor(DREM_API.Model.ADBContext)">
            <summary>
            constructor for project repository
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DREM_API.Repository.ProjectRepository.GetAllAsync">
            <summary>
            Return all real estate companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.ProjectRepository.GetProjectByUrlId(System.String)">
            <summary>
            Returns one project by urlid
            </summary>
            <param name="urlId"></param>
            <returns></returns>
        </member>
        <member name="T:DREM_API.Repository.RECRepository">
            <summary>
            Real estate companies EF repository
            </summary>
        </member>
        <member name="M:DREM_API.Repository.RECRepository.#ctor(DREM_API.Model.ADBContext)">
            <summary>
            rec repository constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DREM_API.Repository.RECRepository.GetAllAsync">
            <summary>
            Return all real estate companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.RECRepository.AddAsync(DREM_API.Model.DB.REC)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.RECRepository.UpdateAsync(DREM_API.Model.DB.REC)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.RECRepository.DeleteAsync(DREM_API.Model.DB.REC)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="T:DREM_API.Repository.ShareholderRepository">
            <summary>
            Real estate companies EF repository
            </summary>
        </member>
        <member name="M:DREM_API.Repository.ShareholderRepository.#ctor(DREM_API.Model.ADBContext)">
            <summary>
            rec repository constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DREM_API.Repository.ShareholderRepository.GetAllAsync">
            <summary>
            Return all real estate companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.ShareholderRepository.AddAsync(DREM_API.Model.Comm.ShareholderBase)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.ShareholderRepository.ListAllForAsset(System.UInt64)">
            <summary>
            List all transactions for asset
            </summary>
            <param name="asaId"></param>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.ShareholderRepository.UpdateAsync(DREM_API.Model.Comm.ShareholderWithId)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.ShareholderRepository.DeleteAsync(System.String[])">
            <summary>
            Delete items from DB.
            </summary>
            <param name="ids">Entity, that will be deleted.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="T:DREM_API.Repository.TransferRepository">
            <summary>
            Real estate companies EF repository
            </summary>
        </member>
        <member name="M:DREM_API.Repository.TransferRepository.#ctor(DREM_API.Model.ADBContext)">
            <summary>
            rec repository constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DREM_API.Repository.TransferRepository.GetAllAsync">
            <summary>
            Return all real estate companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.TransferRepository.AddAsync(DREM_API.Model.Comm.TransferBase)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.TransferRepository.ListAllForAsset(System.UInt64)">
            <summary>
            List all transactions for asset
            </summary>
            <param name="asaId"></param>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.TransferRepository.UpdateAsync(DREM_API.Model.Comm.TransferWithId)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.TransferRepository.DeleteAsync(System.String[])">
            <summary>
            Delete items from DB.
            </summary>
            <param name="ids">Entity, that will be deleted.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="T:DREM_API.Repository.ValueSetRepository">
            <summary>
            Value set EF repository
            </summary>
        </member>
        <member name="M:DREM_API.Repository.ValueSetRepository.#ctor(DREM_API.Model.ADBContext)">
            <summary>
            value set repo constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:DREM_API.Repository.VotingQuestionRepository">
            <summary>
            Real estate companies EF repository
            </summary>
        </member>
        <member name="M:DREM_API.Repository.VotingQuestionRepository.#ctor(DREM_API.Model.ADBContext)">
            <summary>
            rec repository constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DREM_API.Repository.VotingQuestionRepository.GetAllAsync">
            <summary>
            Return all real estate companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.VotingQuestionRepository.AddAsync(DREM_API.Model.Comm.Voting.VotingQuestionBase)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.VotingQuestionRepository.ListAllForQuestioner(System.String)">
            <summary>
            List all transactions for asset
            </summary>
            <param name="questionerAccount">Account of asa creator is allowed to ask questions</param>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.VotingQuestionRepository.UpdateAsync(DREM_API.Model.Comm.Voting.VotingQuestionWithId)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.VotingQuestionRepository.DeleteAsync(System.String[])">
            <summary>
            Delete items from DB.
            </summary>
            <param name="ids">Entity, that will be deleted.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="T:DREM_API.Repository.VotingResultRepository">
            <summary>
            Real estate companies EF repository
            </summary>
        </member>
        <member name="M:DREM_API.Repository.VotingResultRepository.#ctor(DREM_API.Model.ADBContext)">
            <summary>
            rec repository constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DREM_API.Repository.VotingResultRepository.GetAllAsync">
            <summary>
            Return all real estate companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.VotingResultRepository.AddAsync(DREM_API.Model.Comm.Voting.VotingResultBase)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.VotingResultRepository.GetResultForQuestion(System.String)">
            <summary>
            List all transactions for asset
            </summary>
            <param name="questionTxId">Tx id where question has been asked</param>
            <returns></returns>
        </member>
        <member name="M:DREM_API.Repository.VotingResultRepository.UpdateAsync(DREM_API.Model.Comm.Voting.VotingResultWithId)">
            <summary>
            Adds record to DB.
            </summary>
            <param name="entity">Entity, that will be added.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="M:DREM_API.Repository.VotingResultRepository.DeleteAsync(System.String[])">
            <summary>
            Delete items from DB.
            </summary>
            <param name="ids">Entity, that will be deleted.</param>
            <returns>Id of newly created record.</returns>
        </member>
        <member name="T:DREM_API.Startup">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="F:DREM_API.Startup.InstanceId">
            <summary>
            Identifies specific run of the application.
            </summary>
        </member>
        <member name="F:DREM_API.Startup.Started">
            <summary>
            Identifies specific run of the application
            </summary>
        </member>
        <member name="F:DREM_API.Startup.logger">
            <summary>
            Nlog logger
            </summary>
        </member>
        <member name="F:DREM_API.Startup.AppExitCancellationTokenSource">
            <summary>
            App exit catch event
            </summary>
        </member>
        <member name="P:DREM_API.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="P:DREM_API.Startup.Args">
            <summary>
            Args for tasks processing
            </summary>
        </member>
        <member name="M:DREM_API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:DREM_API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:DREM_API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,DREM_API.Model.ADBContext,DREM_API.Repository.ProjectRepository,DREM_API.Repository.RECRepository,DREM_API.Repository.ValueSetRepository)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="context"></param>
            <param name="projectRepository"></param>
            <param name="recRepository"></param>
            <param name="valueSetRepository"></param>
        </member>
        <member name="M:DREM_API.Startup.Dispose(System.Boolean)">
            <summary>
            protected dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:DREM_API.Startup.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
    </members>
</doc>
